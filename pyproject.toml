[tool.poetry]
name = "spacemk"
version = "2.0.0-dev"
description = "Spacelift Migration Kit"
authors = ["Spacelift <contact@spacelift.io>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
click = "8.1.7"
clickloader = "0.2.0"
envyaml = "1.10.211231"
icecream = "2.1.3"
jinja2 = "3.1.3"
pydash = "8.0.0"
python-benedict = "0.33.2"
python-dotenv = "1.0.1"
python-on-whales = "0.70.1"
python-slugify = "8.0.4"
pyyaml = "6.0.1"
requests-toolbelt = "1.0.0"
requests = "2.31.0"
rich = "13.7.1"
xlsxwriter = "3.2.0"

[tool.poetry.group.dev.dependencies]
pytest-cov = "5.0.0"
pytest-dotenv = "0.5.2"
pytest-recording = "0.13.1"
vcrpy = "6.0.1"

[tool.poetry.scripts]
spacemk = "spacemk.__main__:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.codespell]
skip = "poetry.lock"

[tool.pytest.ini_options]
addopts = "--block-network --cov=spacemk --durations=10 --durations-min=1.0 --record-mode=none --strict-markers"

[tool.ruff]
fix = true
ignore = [
  "TRY003", # raise-vanilla-args
]
line-length = 120
select = [
  "A",    # flake8-builtins
  "ARG",  #flake8-unused-arguments
  "B",    # flake8-bugbear
  "E",    # pycodestyle
  "ERA",  # eradicate
  "F",    # Pyflakes
  "FLY",  # flynt
  "FURB", # refurb
  "I",    # isort
  "N",    # pep8-naming
  "PLR",  # Pylint
  "PERF", # Perflint
  "PGH",  # pygrep-hooks
  "PL",   # Pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "TCH",  # flake8-type-checking
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
]
show-fixes = true
unfixable = [
  "ERA001" # commented-out-code
]

[tool.ruff.pylint]
max-args = 7 # KLUDGE: We should refactor the code and remove this at some point
